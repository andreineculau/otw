// Generated by CoffeeScript 1.4.0
(function() {
  var TokenizedHeader, should;

  should = require('../utils').should;

  TokenizedHeader = require('../../like/HTTP/TokenizedHeader');

  describe('TokenizedHeader', function() {
    it('should parse headers with one token correctly', function() {
      var h;
      h = new TokenizedHeader('test');
      h.tokens.should.eql([
        {
          test: true
        }
      ]);
      h = new TokenizedHeader('test=');
      h.tokens.should.eql([
        {
          test: ''
        }
      ]);
      h = new TokenizedHeader('test=true');
      h.tokens.should.eql([
        {
          test: 'true'
        }
      ]);
      h = new TokenizedHeader(' test = true ');
      return h.tokens.should.eql([
        {
          test: 'true'
        }
      ]);
    });
    it('should parse headers with multiple tokens correctly', function() {
      var h;
      h = new TokenizedHeader('test,test=,test=true,test="true"');
      return h.tokens.should.eql([
        {
          test: true
        }, {
          test: ''
        }, {
          test: 'true'
        }, {
          test: 'true'
        }
      ]);
    });
    it('should parse headers with multiple tokens with parameters correctly', function() {
      var h;
      h = new TokenizedHeader('test;p1=1,test=;p1=1;p2=1,test=true;p1=1;p1=1;=1');
      return h.tokens.should.eql([
        {
          test: true,
          p1: '1'
        }, {
          test: '',
          p1: '1',
          p2: '1'
        }, {
          test: 'true',
          p1: '1',
          '': '1'
        }
      ]);
    });
    return it('should be able to stringify correctly', function() {
      var h;
      h = new TokenizedHeader('test;p1=1,test=;p1=1;p2=1,test=true;p1=1;p1=2;=1;p3=" qwe  qwe  qwe"');
      return h.toString().should.equal('test;p1=1,test=;p1=1;p2=1,test=true;p1=1;=1;p3=" qwe  qwe  qwe"');
    });
  });

}).call(this);
